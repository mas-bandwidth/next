version: v1.0

name: Test

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

blocks:

# ------------------------------------------------------------------------------------------------------------

  - name: "Build Functional Tests (backend)"
    dependencies: []
    task:

      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004

      jobs:
        - name: "Build"
          commands:

            - cache restore golang

            - sudo apt-get install -y libsodium-dev

            - checkout
            - cp envs/local.env .env

            - make clean
            - make update-schemas
            - make -j dist/func_test_backend dist/magic_backend dist/relay_gateway dist/relay_backend

            - artifact push workflow dist/func_test_backend --force
            - artifact push workflow dist/magic_backend --force
            - artifact push workflow dist/relay_gateway --force
            - artifact push workflow dist/relay_backend --force

  - name: "Run Functional Tests (backend)"
    dependencies: ["Build Functional Tests (backend)"]
    task:

      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu2004

      prologue:
        commands:

            - sudo apt-get install -y libsodium-dev redis-server

            - mkdir -p dist
            - cd dist

            - artifact pull workflow func_test_backend
            - artifact pull workflow magic_backend
            - artifact pull workflow relay_gateway
            - artifact pull workflow relay_backend

            - chmod +x func_test_backend
            - chmod +x magic_backend
            - chmod +x relay_gateway
            - chmod +x relay_backend

            - cd ~

      epilogue:
        commands:

            - killall magic_backend || true
            - killall relay_gateway || true
            - killall relay_backend || true

      jobs:

        - name: "test_magic_backend"
          commands:
            - cd ./dist && ./func_test_backend test_magic_backend

        - name: "test_cost_matrix_read_write"
          commands:
            - cd ./dist && ./func_test_backend test_cost_matrix_read_write

        - name: "test_route_matrix_read_write"
          commands:
            - cd ./dist && ./func_test_backend test_route_matrix_read_write

        - name: "test_session_data_serialize"
          commands:
            - cd ./dist && ./func_test_backend test_session_data_serialize

        - name: "test_relay_manager"
          commands:
            - cd ./dist && ./func_test_backend test_relay_manager

        - name: "test_optimize"
          commands:
            - cd ./dist && ./func_test_backend test_optimize

        - name: "test_relay_backend"
          commands:
            - cd ./dist && ./func_test_backend test_relay_backend

# ------------------------------------------------------------------------------------------------------------

  - name: "Build Functional Tests (database)"
    dependencies: []
    task:

      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004

      jobs:
        - name: "Build"
          commands:

            - cache restore golang

            - sudo apt-get install -y libsodium-dev

            - checkout
            - cp envs/local.env .env

            - make clean
            - make -j dist/api dist/func_test_database

            - tar -zcvf functional_test_database.tar.gz dist/api dist/func_test_database schemas/sql/*.sql

            - artifact push workflow functional_test_database.tar.gz --force

  - name: "Run Functional Tests (database)"
    dependencies: ["Build Functional Tests (database)"]
    task:

      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu2004

      prologue:
        commands:

            - sem-service start postgres 14
            - sem-service status postgres
            - psql -U postgres -h localhost -c "CREATE USER developer;"
            - psql -U postgres -h localhost -c "ALTER USER developer WITH SUPERUSER;"

            - sudo apt-get install -y libsodium-dev

            - artifact pull workflow functional_test_database.tar.gz

            - tar -zxf functional_test_database.tar.gz

            - chmod +x ./dist/func_test_database

            - ls -al

      epilogue:
        commands:

            - killall api || true

      jobs:

        - name: "test_local"
          commands:
            - cd ./dist && ./func_test_database test_local

        - name: "test_dev"
          commands:
            - cd ./dist && ./func_test_database test_dev

        - name: "test_api"
          commands:
            - cd ./dist && ./func_test_database test_api

# ------------------------------------------------------------------------------------------------------------

  - name: "Build Functional Tests (api)"
    dependencies: []
    task:

      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004

      jobs:
        - name: "Build"
          commands:

            - cache restore golang

            - sudo apt-get install -y libsodium-dev

            - checkout
            - cp envs/local.env .env

            - make clean
            
            - make -j dist/api dist/func_test_api

            - tar -zcvf functional_test_api.tar.gz dist/api dist/func_test_api schemas/sql/*.sql

            - artifact push workflow functional_test_api.tar.gz --force

  - name: "Run Functional Tests (api)"
    dependencies: ["Build Functional Tests (api)"]
    task:

      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu2004

      prologue:
        commands:

            - sem-service start postgres 14
            - sem-service status postgres
            - psql -U postgres -h localhost -c "CREATE USER developer;"
            - psql -U postgres -h localhost -c "ALTER USER developer WITH SUPERUSER;"

            - sudo apt-get install -y libsodium-dev

            - artifact pull workflow functional_test_api.tar.gz

            - tar -zxf functional_test_api.tar.gz

            - chmod +x ./dist/api
            - chmod +x ./dist/func_test_api

      epilogue:
        commands:

            - killall api || true

      jobs:

        - name: "test_buyer"
          commands:
            - cd ./dist && ./func_test_api test_buyer

        - name: "test_seller"
          commands:
            - cd ./dist && ./func_test_api test_seller

        - name: "test_datacenter"
          commands:
            - cd ./dist && ./func_test_api test_datacenter

        - name: "test_relay"
          commands:
            - cd ./dist && ./func_test_api test_relay

        - name: "test_route_shader"
          commands:
            - cd ./dist && ./func_test_api test_route_shader

        - name: "test_buyer_datacenter_settings"
          commands:
            - cd ./dist && ./func_test_api test_buyer_datacenter_settings

        - name: "test_database"
          commands:
            - cd ./dist && ./func_test_api test_database

# ------------------------------------------------------------------------------------------------------------

  - name: "Build and Run Functional Tests (portal)"
    dependencies: []
    task:

      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004

      jobs:
        - name: "test_portal"
          commands:

            - sudo apt-get install -y libsodium-dev redis

            - cache restore golang

            - checkout
            - cp envs/local.env .env

            - make clean
            - make -j dist/api dist/session_cruncher dist/server_cruncher dist/func_test_portal 
            - cd ./dist && ./func_test_portal test_portal

            - killall api || true
            - killall session_cruncher || true
            - killall server_cruncher || true

# ------------------------------------------------------------------------------------------------------------

  - name: "Build Functional Tests (terraform)"
    dependencies: []
    task:

      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004

      jobs:
        - name: "Build"
          commands:

            - cache restore golang

            - sudo apt-get install -y libsodium-dev

            - checkout
            - cp envs/local.env .env

            - make clean
            
            - make -j dist/api dist/func_test_terraform

            - tar -zcvf functional_test_terraform.tar.gz dist/api dist/func_test_terraform schemas/sql/*.sql

            - artifact push workflow functional_test_terraform.tar.gz --force

  - name: "Run Functional Tests (terraform)"
    dependencies: ["Build Functional Tests (terraform)"]
    task:

      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu2004

      prologue:
        commands:

            - sem-service start postgres 14
            - sem-service status postgres
            - psql -U postgres -h localhost -c "CREATE USER developer;"
            - psql -U postgres -h localhost -c "ALTER USER developer WITH SUPERUSER;"

            - sudo apt-get install -y libsodium-dev

            - artifact pull workflow functional_test_terraform.tar.gz

            - tar -zxf functional_test_terraform.tar.gz

            - chmod +x ./dist/api
            - chmod +x ./dist/func_test_terraform

      epilogue:
        commands:

            - killall api || true

      jobs:

        - name: "test_terraform"
          commands:
            - cd ./dist && ./func_test_terraform test_terraform

# ------------------------------------------------------------------------------------------------------------

  - name: "Load Tests"
    dependencies: []
    task:

      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004

      prologue:
        commands:
            - sem-service start redis 7
            - cache restore golang
            - sudo apt-get install -y libsodium-dev
            - checkout
            - cp envs/local.env .env

      jobs:

        - name: "Load Test Redis Data"
          commands:
            - ./run load-test-redis-data
            
        - name: "Load Test Redis Optimize"
          commands:
            - ./run load-test-optimize

        - name: "Load Test Route Matrix"
          commands:
            - ./run load-test-route-matrix

        - name: "Load Test Relay Manager"
          commands:
            - ./run load-test-relay-manager

        - name: "Load Test Crypto Box"
          commands:
            - ./run load-test-crypto-box

        - name: "Load Test Crypto Sign"
          commands:
            - ./run load-test-crypto-sign

        - name: "Load Test Server Update"
          commands:
            - ./run load-test-server-update

        - name: "Load Test Session Update"
          commands:
            - ./run load-test-session-update

# ------------------------------------------------------------------------------------------------------------

promotions:

  - name: "Upload Artifacts"
    pipeline_file: upload-artifacts.yml
    auto_promote:
      when: "result = 'passed' and tag =~ '.*'"

# ------------------------------------------------------------------------------------------------------------
