version: v1.0

name: Test

agent:
  machine:
    type: e1-standard-8
    os_image: ubuntu2004

global_job_config:
  secrets:
    - name: sdk5-repo-access
  prologue:
    commands:
      - checkout
      - cp envs/local.env .env

blocks:

  - name: "Backend"
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-8
          os_image: ubuntu2004
        containers:
          - name: main
            image: nbopardi/networknext:backend
      jobs:
        - name: "Unit Tests"
          commands:
            - make test
      env_vars:
        - name: PUBSUB_EMULATOR_HOST
          value: "127.0.0.1:12000"
        - name: BIGTABLE_EMULATOR_HOST
          value: "127.0.0.1:8086"

  - name: "SDK4"
    dependencies: []
    task:
      jobs:
        - name: "Unit Tests"
          commands:
            - sudo apt-get update
            - sudo apt-get install -y libsodium-dev
            - chmod 0600 /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - ssh-add /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - git submodule init
            - git submodule update
            - make -j32 test-sdk4

  - name: "SDK5"
    dependencies: []
    task:
      jobs:
        - name: "Unit Tests"
          commands:
            - sudo apt-get update
            - sudo apt-get install -y libsodium-dev
            - chmod 0600 /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - ssh-add /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - git submodule init
            - git submodule update
            - make -j32 test-sdk5

  - name: "Relay"
    dependencies: []
    task:
      jobs:
        - name: "Unit Tests"
          commands:
            - sudo apt-get update
            - sudo apt-get install -y libsodium-dev
            - chmod 0600 /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - ssh-add /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - git submodule init
            - git submodule update
            - make -j32 test-relay

  - name: "Functional Tests 5"
    dependencies: []
    task:
      agent:
        machine:
          type: e1-standard-8
          os_image: ubuntu2004

      prologue:
        commands:
            - sudo apt-get update
            - sudo apt-get install -y libsodium-dev libzmq3-dev
            - chmod 0600 /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - ssh-add /home/semaphore/.ssh/id_rsa_semaphoreci_sdk5
            - git submodule init
            - git submodule update
            - make -j32 build-test-func5

      jobs:

        - name: "test_passthrough"
          commands:
            - ./dist/func_tests5 test_passthrough

        - name: "test_direct_upgraded"
          commands:
            - ./dist/func_tests5 test_direct_upgraded

        - name: "test_network_next_route"
          commands:
            - ./dist/func_tests5 test_network_next_route

        - name: "test_fallback_to_direct_backend"
          commands:
            - ./dist/func_tests5 test_fallback_to_direct_backend

        - name: "test_fallback_to_direct_client_side"
          commands:
            - ./dist/func_tests5 test_fallback_to_direct_client_side

        - name: "test_fallback_to_direct_server_restart"
          commands:
            - ./dist/func_tests5 test_fallback_to_direct_server_restart

        - name: "test_disable_on_server"
          commands:
            - ./dist/func_tests5 test_disable_on_server

        - name: "test_disable_on_client"
          commands:
            - ./dist/func_tests5 test_disable_on_client

        - name: "test_route_switching"
          commands:
            - ./dist/func_tests5 test_route_switching

        - name: "test_on_off"
          commands:
            - ./dist/func_tests5 test_on_off

        - name: "test_on_on_off"
          commands:
            - ./dist/func_tests5 test_on_on_off

promotions:

  - name: "Development Deployment"
    pipeline_file: development-deploy.yml
    auto_promote:
      when: branch = 'dev' AND result = 'passed'
  
  - name: "Staging Deployment"
    pipeline_file: staging-deploy.yml
    auto_promote:
      when: branch = 'staging' AND result = 'passed'
  
  - name: "Production Deployment"
    pipeline_file: production-deploy.yml
    auto_promote:
      when: branch = 'prod' AND result = 'passed'
  
  - name: "Production Debug Deployment"
    pipeline_file: production-debug-deploy.yml
    auto_promote:
      when: branch = 'prod_debug' AND result = 'passed'