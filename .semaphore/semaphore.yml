version: v1.0

name: Build

fail_fast:
  stop:
    when: "true"

agent:
  machine:
    type: f1-standard-4
    os_image: ubuntu2004

blocks:

  - name: "Components"
    dependencies: []
    task:
      agent:
        machine:
          type: f1-standard-4
          os_image: ubuntu2004
      jobs:
        - name: "Build Components"
          commands:
            - sudo apt-get install -y libsodium-dev
            - checkout
            - mkdir dist
            - make -j ./dist/relay-debug ./dist/relay-release ./dist/libnext.so
            - artifact push workflow ./dist/relay-debug --force
            - artifact push workflow ./dist/relay-release --force
            - artifact push workflow ./dist/libnext.so --force
            - artifact push workflow deploy/bootstrap.sh --force
            - artifact push workflow config/google.txt --force
            - artifact push workflow config/amazon.txt --force
            - artifact push workflow config/akamai.txt --force
            - artifact push workflow config/vultr.txt --force
            - artifact push workflow config/multiplay.txt --force

  - name: "Sodium"
    dependencies: []
    task:
      jobs:
        - name: "Build libsodium.so"
          commands:
            - wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz
            - tar -zxf libsodium*
            - cd libsodium-1.0.18
            - ./configure
            - make -j
            - sudo make install
            - ls -al /usr/local/lib
            - artifact push workflow /usr/local/lib/libsodium.so --force

  - name: "Backend"
    dependencies: []
    task:
      jobs:
        - name: "Unit Tests"
          commands:
            - cache restore golang
            - checkout
            - cp envs/local.env .env
            - sudo apt-get install -y libsodium-dev
            - go test ./modules/...

  - name: "SDK"
    dependencies: []
    task:
      jobs:
        - name: "Unit Tests"
          commands:
            - sudo apt-get install -y libsodium-dev
            - checkout
            - cp envs/local.env .env
            - export LD_LIBRARY_PATH=.
            - mkdir dist
            - make dist/test
            - cd dist && ./test

  - name: "Portal"
    dependencies: []
    task:
      jobs:
        - name: "Build Portal"
          commands:
            - checkout
            - cd portal
            - yarn install
            - PORTAL_ENV = $SEMAPHORE_GIT_TAG_NAME if SEMAPHORE_GIT_TAG_NAME!='' else $SEMAPHORE_GIT_BRANCH_NAME
            - yarn build-${PORTAL_ENV}
            - cd dist
            - tar -zcvf portal.tar.gz *
            - artifact push workflow portal.tar.gz --force

  - name: "Build Artifacts (Golang)"

    dependencies: []

    task:

      prologue:
        commands:
            - sudo apt-get install -y libsodium-dev
            - checkout
            - cache restore golang

      jobs:

        - name: "Analytics"
          commands:
            - make dist/analytics.tar.gz
            - artifact push workflow dist/analytics.tar.gz --force

        - name: "API"
          commands:
            - make dist/api.tar.gz
            - artifact push workflow dist/api.tar.gz --force

        - name: "Map Cruncher"
          commands:
            - make dist/map_cruncher.tar.gz
            - artifact push workflow dist/map_cruncher.tar.gz --force

        - name: "Portal Cruncher"
          commands:
            - make dist/portal_cruncher.tar.gz
            - artifact push workflow dist/portal_cruncher.tar.gz --force

        - name: "Relay Gateway"
          commands:
            - make dist/relay_gateway.tar.gz
            - artifact push workflow dist/relay_gateway.tar.gz --force

        - name: "Relay Backend"
          commands:
            - make dist/relay_backend.tar.gz
            - artifact push workflow dist/relay_backend.tar.gz --force

        - name: "Server Backend"
          commands:
            - make dist/server_backend.tar.gz
            - artifact push workflow dist/server_backend.tar.gz --force

        - name: "Magic Backend"
          commands:
            - make dist/magic_backend.tar.gz
            - artifact push workflow dist/magic_backend.tar.gz --force

        - name: "Raspberry Backend"
          commands:
            - make dist/raspberry_backend.tar.gz
            - artifact push workflow dist/raspberry_backend.tar.gz --force

        - name: "IP2Location"
          commands:
            - make dist/ip2location.tar.gz
            - artifact push workflow dist/ip2location.tar.gz --force

        - name: "Load Test Relays"
          commands:
            - make dist/load_test_relays.tar.gz
            - artifact push workflow dist/load_test_relays.tar.gz --force

        - name: "Load Test Servers"
          commands:
            - make dist/load_test_servers.tar.gz
            - artifact push workflow dist/load_test_servers.tar.gz --force

        - name: "Load Test Sessions"
          commands:
            - make dist/load_test_sessions.tar.gz
            - artifact push workflow dist/load_test_sessions.tar.gz --force

  - name: "Build Artifacts (Native)"

    dependencies: []

    task:

      prologue:
        commands:
            - sudo apt-get install -y libsodium-dev
            - checkout
            - mkdir dist

      jobs:

        - name: "Raspberry Server"
          commands:
            - make -j dist/raspberry_server.tar.gz
            - artifact push workflow dist/raspberry_server.tar.gz --force

        - name: "Raspberry Client"
          commands:
            - make -j dist/raspberry_client.tar.gz
            - artifact push workflow dist/raspberry_client.tar.gz --force

promotions:

  - name: "Run Tests"
    pipeline_file: test.yml
    auto_promote:
      when: "result = 'passed' and tag =~ '.*'"

  - name: "Upload Config"
    pipeline_file: upload-config.yml

  - name: "Upload Relay"
    pipeline_file: upload-relay.yml

  - name: "Update Golang Cache"
    pipeline_file: update-golang-cache.yml

  - name: "Happy Path"
    pipeline_file: happy-path.yml
