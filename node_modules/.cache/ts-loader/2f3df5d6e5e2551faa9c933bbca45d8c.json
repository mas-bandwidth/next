{"remainingRequest":"/home/baumbachandrew/Projects/Work/portal/node_modules/babel-loader/lib/index.js!/home/baumbachandrew/Projects/Work/portal/node_modules/ts-loader/index.js??ref--14-2!/home/baumbachandrew/Projects/Work/portal/node_modules/eslint-loader/index.js??ref--13-0!/home/baumbachandrew/Projects/Work/portal/src/services/api.service.ts","dependencies":[{"path":"/home/baumbachandrew/Projects/Work/portal/src/services/api.service.ts","mtime":1593632212142},{"path":"/home/baumbachandrew/Projects/Work/portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/baumbachandrew/Projects/Work/portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/baumbachandrew/Projects/Work/portal/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/baumbachandrew/Projects/Work/portal/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvYmF1bWJhY2hhbmRyZXcvUHJvamVjdHMvV29yay9wb3J0YWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvaG9tZS9iYXVtYmFjaGFuZHJldy9Qcm9qZWN0cy9Xb3JrL3BvcnRhbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKdmFyIEFQSVNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEFQSVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQVBJU2VydmljZSk7CgogICAgdGhpcy5oZWFkZXJzID0gbnVsbDsKICAgIHRoaXMuaGVhZGVycyA9IHsKICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvc24nLAogICAgICAnQWNjZXB0LUVuY29kaW5nJzogJ2d6aXAnLAogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICB9OwogICAgLyoqCiAgICAgKiBUT0RPOiBDaGVjayBpZiB0aGVyZSBpcyBhbiBhdXRoIHRva2VuIGFzc29jaWF0ZWQgd2l0aAogICAgICogICAgICAgdGhlIHVzZXIgYW5kIGFkZCB0aGUgdG9rZW4gdG8gdGhlIGF1dGggaGVhZGVyCiAgICAgKgogICAgICogKi8KICB9CgogIF9jcmVhdGVDbGFzcyhBUElTZXJ2aWNlLCBbewogICAga2V5OiAiY2FsbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2FsbChtZXRob2QsIHBhcmFtcykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB2YXIgb3B0aW9ucyA9IHBhcmFtcyB8fCB7fTsKICAgICAgICB2YXIgaWQgPSBKU09OLnN0cmluZ2lmeShwYXJhbXMpOwogICAgICAgIGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjIwMDAwL3JwYycsIHsKICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgaGVhZGVyczogX3RoaXMuaGVhZGVycywKICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAganNvbnJwYzogJzIuMCcsCiAgICAgICAgICAgIG1ldGhvZDogbWV0aG9kLAogICAgICAgICAgICBwYXJhbXM6IG9wdGlvbnMsCiAgICAgICAgICAgIGlkOiBpZAogICAgICAgICAgfSkKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgcmVzb2x2ZShyZXNwb25zZS5qc29uKCkpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQVBJU2VydmljZTsKfSgpOwoKZXhwb3J0IHsgQVBJU2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/baumbachandrew/Projects/Work/portal/node_modules/eslint-loader/index.js??ref--13-0!/home/baumbachandrew/Projects/Work/portal/src/services/api.service.ts"],"names":[],"mappings":";;;;IAAqB,U;AAGnB,wBAAA;AAAA;;AAFQ,SAAA,OAAA,GAAe,IAAf;AAGN,SAAK,OAAL,GAAe;AACb,MAAA,MAAM,EAAE,mBADK;AAEb,yBAAmB,MAFN;AAGb,sBAAgB;AAHH,KAAf;AAMA;;;;;AAKD;;;;yBAEW,M,EAAgB,M,EAAW;AAAA;;AACrC,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACrC,YAAM,OAAO,GAAG,MAAM,IAAI,EAA1B;AACA,YAAM,EAAE,GAAG,IAAI,CAAC,SAAL,CAAe,MAAf,CAAX;AACA,QAAA,KAAK,CAAC,4BAAD,EAA+B;AAClC,UAAA,MAAM,EAAE,MAD0B;AAElC,UAAA,OAAO,EAAE,KAAI,CAAC,OAFoB;AAGlC,UAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AACnB,YAAA,OAAO,EAAE,KADU;AAEnB,YAAA,MAAM,EAAN,MAFmB;AAGnB,YAAA,MAAM,EAAE,OAHW;AAInB,YAAA,EAAE,EAAF;AAJmB,WAAf;AAH4B,SAA/B,CAAL,CAUG,IAVH,CAUQ,UAAC,QAAD,EAAuB;AAC3B,UAAA,OAAO,CAAC,QAAQ,CAAC,IAAT,EAAD,CAAP;AACD,SAZH,EAaG,KAbH,CAaS,UAAC,KAAD,EAAiB;AACtB,UAAA,MAAM,CAAC,KAAD,CAAN;AACD,SAfH;AAgBD,OAnBM,CAAP;AAoBD;;;;;;SAtCkB,U","sourcesContent":["export default class APIService {\n  private headers: any = null;\n\n  constructor() {\n    this.headers = {\n      Accept: 'application/jsosn',\n      'Accept-Encoding': 'gzip',\n      'Content-Type': 'application/json',\n    };\n\n    /**\n     * TODO: Check if there is an auth token associated with\n     *       the user and add the token to the auth header\n     *\n     * */\n  }\n\n  public call(method: string, params: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const options = params || {};\n      const id = JSON.stringify(params);\n      fetch('http://127.0.0.1:20000/rpc', {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          method,\n          params: options,\n          id,\n        }),\n      })\n        .then((response: Response) => {\n          resolve(response.json());\n        })\n        .catch((error: Error) => {\n          reject(error);\n        });\n    });\n  }\n}\n"],"sourceRoot":""}]}