DONE

	SDK rework

	Rebuild and test server backend

	Rebuild and test relay backend

	Define set of messages for analytics and portal

	Rebuild analytics service	

	API service with REST API to drive the portal functionality.

	API service with REST API to drive admin functionality (talk to the postgres database, eg. CRUD)

	API service with REST API to drive database.bin functionality (load the database.bin, query what is in there).

	Functional tests for admin, portal and database REST API functionality.

	Working "next" tool that runs off the REST API and supports any number of different configured environments.

	Setup dev environment in google cloud with terraform.

	Terraform modules to setup relays with google, amazon, akamai and linode (dev).

	Resolve external UDP load balancer blocker.

	API_KEY for API.

	Ability to run system locally under docker compose.

	Network Next terraform provider.

	Multithreaded relay with session database per-socket thread (no contention)

	Document setup process with terraform and run through it several times to check it out

	Setup dev backend with terraform

	Finish the terraform plugin and publish it

	Get tag based development working with semaphoreci and terraform

	Setup relays in dev

	Get raspberry clients sending traffic over relays in dev

	Rebuild portal (first half)

	IP2Location

	Setup staging environment

	Setup google pubsub in dev

	Setup google bigquery in dev

	Verify all analytics tables have correct data written in dev

	Implement load testing harness

	Secure with HTTPS

	Deploy portal and test across iphones, ipads, mac laptops, desktops and PCs

	Load test to 1000 relays, 100k servers and 100k sessions.

	Load test to 1000 relays, 100k servers, and 1M sessions

	Load test to 5M sessions

	Load test to 10M sessions

	Finalize portal layout and contents

	Setup prod environment

	Fix fallback to directs on server backend.

	Load test to 1K relays, 1M servers and 10M sessions.

	Insert analytics messages into bigquery

	Optimize the setup process by automating creation of projects, service accounts and permissions

TODO

	Configure script to setup company name, billing id, roll keypairs etc.

	-----------

	Portal map
	
	-----------

	Finalize SDK and UE5 plugin

	-----------

	Multithreaded relay fix and load testing.

	https://github.com/leandromoreira/linux-network-performance-parameters

	https://developers.redhat.com/blog/2021/05/13/receive-side-scaling-rss-with-ebpf-and-cpumap#redirecting_into_a_cpumap

	-----------

	Document *everything*.

	-----------

	Add support for as many sellers as possible (terraform + config scripts...)

	-----------
