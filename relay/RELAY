DONE

	Theoretically everything is working.

	But I'll need to add logs to check everything is actually working as expected.

	Verified that relay has ping key.

	Verified that relay ping key matches the relay gateway ping key.

RELAY

	Add logs to print out the expire timestamp and the ping tokens when generated in server backend.

	Add logs on the client to print out the ping tokens and expire timestamp when they are received in the relay manager.

	Verify that the client actually has the correct values.

	-------

	Verify that client gets near relay pong responses from the relay.

	-------

	Verify that happy path passes

	-------

	Verify that func tests pass

	-------

	Now we can do the same with relay <-> relay pings.

	Extend the relay ping packet to include 32 byte signature and expire timestamp (2 seconds in future?)

	When processing relay ping packet, ignore if it's expired.

	When processing relay ping packet, ignore if signature doesn't verify.

	-------

	Only tricky thing is that we'll need to be aware for relay <-> relay pings to encode the ping token as per-internal address for from, when we're sending internally to another relay.

	-------


























	------------------

	Debug why the happy path is not working on linux

	------------------

	Relay should have functional tests, separate from sdk func tests, and runnable inside semaphore.

	Start with the absolute basics of the relay functionality, and test everything from top to bottom.

	------------------

	Relay should have load test harness framework (totally separate from the SDK and backend...)

	------------------

	Relay should be load tested in google cloud (driven by terraform)

	------------------

	Relay should be load tested in bare metal with 1G NIC, 10G NIC

	------------------
