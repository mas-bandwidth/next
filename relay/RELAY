DONE

	Theoretically everything is working.

	But I'll need to add logs to check everything is actually working as expected.

	Verified that relay has ping key.

	Verified that relay ping key matches the relay gateway ping key.

	Add logs to print out the expire timestamp and the ping tokens when generated in server backend.

	Run a server backend, client and server and see what's up.

	Server fails with:

		debug: server ignored session update response packet from backend. packet failed to read

	Must be a desync between next.cpp serialize for the session update response, vs. golang.

	Fix desync in session update response packet

	I think it was the bad ping token bytes value. checking now...

	Confirmed fixed.

	Now the client is sending off near relay pings, but not getting any response:

		[127.0.0.1:55237] received near relay ping packet
		[127.0.0.1:55237] near ping token did not verify

	Looks like I'm going to need to verify that ping tokens get sent down properly.

	Verify that the next.cpp server gets the ping tokens with logs

	Verify that the next.cpp client gets the ping tokens with logs

	Verify that the correct ping tokens are sent with the near ping packet.

RELAY

	Add logs on next.cpp ping packet send, and specify the relay public address, the expire timestamp, and the ping token.

	-------

	Add logs on relay receive ping packet, printing out the values for validation, expire timestamp, from address, relay public address, ping token.

	-------

	Verify that client gets near relay pong responses from the relay.

	-------

	Verify that happy path passes

	-------

	Verify that func tests pass

	-------

	Now we can do the same with relay <-> relay pings.

	Extend the relay ping packet to include 32 byte signature and expire timestamp (2 seconds in future?)

	When processing relay ping packet, ignore if it's expired.

	When processing relay ping packet, ignore if signature doesn't verify.

	-------

	Only tricky thing is that we'll need to be aware for relay <-> relay pings to encode the ping token as per-internal address for from, when we're sending internally to another relay.

	-------


























	------------------

	Debug why the happy path is not working on linux

	------------------

	Relay should have functional tests, separate from sdk func tests, and runnable inside semaphore.

	Start with the absolute basics of the relay functionality, and test everything from top to bottom.

	------------------

	Relay should have load test harness framework (totally separate from the SDK and backend...)

	------------------

	Relay should be load tested in google cloud (driven by terraform)

	------------------

	Relay should be load tested in bare metal with 1G NIC, 10G NIC

	------------------
