
CREATE TABLE route_shaders (
  route_shader_id integer generated by default as identity,
  route_shader_name varchar not null,
  ab_test boolean not null default false,
  acceptable_latency integer not null default 0,
  acceptable_packet_loss numeric not null default 0.0,
  bandwidth_envelope_down_kbps integer not null default 1024,
  bandwidth_envelope_up_kbps integer not null default 1024,
  disable_network_next boolean not null default false,
  latency_reduction_threshold integer not null default 10,
  selection_percent integer not null default 100,
  max_latency_trade_off integer not null default 20,
  route_switch_threshold integer not null default 10,
  route_select_threshold integer not null default 5,
  force_next boolean not null default false,
  primary key (route_shader_id),
  constraint route_shader_short_name_constraint unique(route_shader_name)
);

CREATE TABLE buyers (
  buyer_id integer generated by default as identity,
  buyer_name varchar not null,
  buyer_code varchar not null,
  live boolean not null default false,
  debug boolean not null default false,
  public_key_base64 varchar not null,
  route_shader_id integer not null,
  primary key (buyer_id),
  constraint fk_route_shader_id foreign key (route_shader_id) references route_shaders(route_shader_id),
  constraint buyer_name_constraint unique(buyer_name),
  constraint buyer_code_constraint unique(buyer_code)
);

CREATE TABLE sellers (
  seller_id integer generated by default as identity,
  seller_name varchar not null,
  seller_code varchar not null,
  primary key (seller_id),
  constraint seller_name_constraint unique(seller_name),
  constraint seller_code_constraint unique(seller_code)
);

CREATE TABLE datacenters (
  datacenter_id integer generated by default as identity,
  datacenter_name varchar not null unique,
  native_name varchar not null default '',
  latitude numeric not null,
  longitude numeric not null,
  seller_id integer not null,
  notes varchar not null default '',
  primary key (datacenter_id),
  constraint fk_seller_id foreign key (seller_id) references sellers(seller_id),
  constraint datacenter_name_constraint unique(datacenter_name)
);

CREATE TABLE relays (
  relay_id integer generated by default as identity,
  relay_name varchar not null,
  datacenter_id integer not null,
  public_ip inet not null,
  public_port integer not null default 40000,
  internal_ip inet not null default '0.0.0.0',
  internal_port integer not null default 0,
  internal_group varchar not null default '',
  ssh_ip inet not null default '0.0.0.0',
  ssh_port integer not null default 22,
  ssh_user varchar not null default 'root',
  public_key_base64 varchar not null,
  private_key_base64 varchar not null default '',
  version varchar not null default '',
  mrc integer not null default 0,
  port_speed integer not null default 1000,
  max_sessions integer not null default 0,
  bandwidth_price integer not null default 0,
  notes varchar not null default '',
  primary key (relay_id),
  constraint fk_datacenter foreign key (datacenter_id) references datacenters(datacenter_id),
  constraint relay_name_constraint unique(relay_name),
  constraint relay_public_ip_and_port_constraint unique(public_ip, public_port)
);

create table buyer_datacenter_settings (
  buyer_id integer not null,
  datacenter_id integer not null,
  enable_acceleration boolean not null default true,
  primary key (buyer_id, datacenter_id),
  constraint fk_buyer foreign key (buyer_id) references buyers(buyer_id),
  constraint fk_datacenter foreign key (datacenter_id) references datacenters(datacenter_id),
  constraint datacenter_map_unique_constraint unique(buyer_id, datacenter_id)
);

CREATE TABLE buyer_keypairs (
  buyer_keypair_id integer generated by default as identity,
  public_key_base64 varchar not null,
  private_key_base64 varchar not null,
  primary key (buyer_keypair_id)
);

CREATE TABLE relay_keypairs (
  relay_keypair_id integer generated by default as identity,
  public_key_base64 varchar not null,
  private_key_base64 varchar not null,
  primary key (relay_keypair_id)
);
