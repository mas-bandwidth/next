DONE

	Seems like we really need to capture timestamp for portal session update at the time of processing (eg. start of session update), not at the time the portal cruncher processes it

	This way we don't get time stretch and squeeze if the portal cruncher gets overloaded -- the data just comes in a bit late.

	We need a non-paginated way to get set of database relays for "next relays"

	Track number of routes in route matrix via counters sent from leader relay backend

	Track most of relay analysis and relevant data in redis time series.

	Grab key data like, total routes, optimize_ms and stash in admin as time series.

	Display total routes, optimize_ms graphs in admin page in portal

		"route_matrix_total_routes",
		"route_matrix_bytes",
		"route_matrix_optimize_ms",

TODO

	Verify route matrix graphs are working in staging

	Style the route matrix graphs with color

	Verify that we can scale up to 10M sessions, this time redis should not break (25 shards...)


	




















































Tasks from load test:

	--------------

	We need to put dependencies on redis, so the redis instances get created first, then all the instance groups do.

	Right now they are created, run without redis, don't work, and I have to deploy a second time when I first bring staging up.

	--------------
	
	There seems to be a load related issue @ 1000 relays.

	--------------

	Fix the fallback to direct when scaling down server backend instances.

	--------------

	Change analytics to perform bulk inserts instead of streaming inserts.

	https://cloud.google.com/bigquery/docs/write-api-batch

	--------------

	Setup projects and service accounts with terraform

	--------------














Small things:

	--------------

	The sort order for sessions appears incorrect according to score... not sure why.

	--------------

	Y axis labels spill over the right side when they get up to 100,000, 1,000,000 etc... convert to 500K, 1M, 2M?

	--------------

	Current sessions on server doesn't seem to be correct, or at least, it is 181 when it should be just 1...

	--------------

	uPlot graphs really need to calculate the real maximum from the data passed in

	In so many cases, they fail to calculate it. It's extremely annoying.

	--------------

	I need more space on a standard macbook air screen in the sessions list for longer ISP names

	Right now it is way too tight. A long ISP name would throw the whole layout off

	--------------

	There will be a challenge getting prod relays up in AWS vs. dev. There are no projects to segregate?

	Might need to create a separate project, or distinguish resources with naming convention.

	--------------

	Extend initial delay on server cruncher and session cruncher for 120. This will delay them from becoming active until they have had a full minute + to calculate sessions

	--------------

	Connection type detection needs to be brought back for all platforms in the SDK. On linux, connection type was 0 -> "Unknown"

	--------------

	Session counts on relays being 8 when relay backend restarts seems a bit suspicious. Are we not decrementing session counts somewhere?

	--------------

	Relays need to be setup to use cloud storage for tf state

	--------------

	Probably good to provide a way to disable the high priority threads on server with env var.

	When many server instances are running on one server, this can cause problems. eg. thread starvation

	--------------















Finalize SDK and UE5 plugin:

	------------------

	Update to latest PS4 and PS5 SDK on Windows PC

	Verify that we can build, link and run across PS4

	Verify that we can build, link and run across PS5

	------------------

	Update to latest XDK

	Verify that we can build, link and run across XBoxOne

	Verify that we can build, link and run across SeriesX

	------------------

	Setup PS4 compilation with custom agents

	Setup PS5 compilation with custom agents

	Setup XBoxOne compilation with custom agents

	Setup Series X compilation with custom agents

	------------------

	Get the UE5 plugin back up

	Make sure to include Flush on the server before the server is destroyed

	------------------
