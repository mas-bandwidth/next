DONE

	Bring production back up

	Make sure in production I can reproduce fallback to direct when scale down the server backend

	Smooth out session counts by standardizing raspberry client session length

	Dev generally seems like it randomly falls over

	eg. no sessions

	I think it is the session cruncher going down, and restarting...

	Confirmed. Fixed by bumping up to n1-standard-2.

	Smooth out the session counts by standardizing raspberry client session length and randomizing start time against that length

	Verify session ramp up is now smooth

TODO

	Debug why sessions aren't taking network next in load test.

	--------------

	Extend load test up to 10M with next sessions, now that 

	--------------

	Fix the fallback to direct when scaling down server backend instances.

	--------------

	Change analytics to perform bulk inserts instead of streaming inserts.

	Bulk inserts are free.
	
	https://cloud.google.com/bigquery/docs/write-api-batch

	--------------

	Setup projects and service accounts with terraform

	--------------














Small things:

	--------------

	Make sure in production we can scale down the server backends and not fallback to direct

	(I have confirmed that I can reproduce this in production with 100k sessions, going from 10 server backends to 1 = 20k fallback to direct)

	--------------

	uPlot graphs really need to calculate the real maximum from the data passed in

	In so many cases, they fail to calculate it. It's extremely annoying.

	--------------

	I need more space on a standard macbook air screen in the sessions list for longer ISP names

	Right now it is way too tight. A long ISP name would throw the whole layout off

	--------------

	There will be a challenge getting prod relays up in AWS vs. dev. There are no projects to segregate?

	Might need to create a separate project, or distinguish resources with naming convention.

	--------------

	Extend initial delay on server cruncher and session cruncher for 120. This will delay them from becoming active until they have had a full minute + to calculate sessions

	--------------

	Connection type detection needs to be brought back for all platforms in the SDK. On linux, connection type was 0 -> "Unknown"

	--------------

	Session counts on relays being 8 when relay backend restarts seems a bit suspicious. Are we not decrementing session counts somewhere?

	--------------

	dev relays need to also be setup to use cloud storage for tf state?

	--------------

	Probably good to provide a way to disable the high priority threads on server with env var.

	When many server instances are running on one server, this can cause problems. eg. thread starvation

	--------------















Finalize SDK and UE5 plugin:

	------------------

	Update to latest PS4 and PS5 SDK on Windows PC

	Verify that we can build, link and run across PS4

	Verify that we can build, link and run across PS5

	------------------

	Update to latest XDK

	Verify that we can build, link and run across XBoxOne

	Verify that we can build, link and run across SeriesX

	------------------

	Setup PS4 compilation with custom agents

	Setup PS5 compilation with custom agents

	Setup XBoxOne compilation with custom agents

	Setup Series X compilation with custom agents

	------------------

	Get the UE5 plugin back up

	Make sure to include Flush on the server before the server is destroyed

	------------------
