DONE

	Fix as many packet sends as possible to use the new functions.

	Add current and previous magic to pending, proxy and session entries.

	Server needs to track upcoming, current and previous magic values.

	Upcoming is the latest value from the server backend.

	When it changes, there is a 30 second timer before we move current -> previous, and upcoming -> current.

	When the server receives a session update with new magic in it, update the magic.

	The magic must not be any of the current or previous magic values.

	ps. Would be nicer if it were a server update, not per-session?

	Ooooooh, if we don't have any sessions then we can't get the magic down...

	If the server update only occurs once every 10 seconds, then... the magic is delayed, and packet loss effects could be severe (would need retry).

	Do we really want to do a server update w. response and retry just to get the latest magic down?

	Probably need to :(

	But then the session update is by definition needing to have a fixed magic.

	Then why not have fixed magic for the comms with the server backend?

	It seems pragmatic that we do this, then there is no magic concerns between the servers <-> server backend, and we can hitch the magic on the session update (which already has a retry...).

	It is decided.

	Extend the session update to have magic in the response.

	When a session update comes in, and the magic is different to upcoming, current and previous magic, copy to upcoming and set timer to update magic in 30 seconds.

	Make sure this is done after we verify the session update response matches a request id.

TODO

	--------------

	All comms with server backend (read and write) should have magic of zero.

	--------------

	Actually track current and previous magic in session entries

	Must be done in pending, proxy and current...

	--------------

	Hook up and store the current magic in the session entry (from the upgrade response)

	Hook up and store the current magic, move to prev, in the session entry (from the route update ack)

	Actually use the current magic for session to send packet to client (but only for direct to client packets...)

	--------------

	Add concept of relay_magic, 30 second delayed from current -- this relay magic ensures that we can talk with relays without race.

	Actually use the relay magic when sending packets to relays from the server.

	Client also sends packets to relays, so the client should be driven from the relay magic as well... yowza.

	--------------

	Get the client/server upgrade working and the upgraded direct packets being exchanged between client and server.

	--------------

	Update the func backend 5 so it can handle new SDK5 packet types.

	--------------

	Get various upgraded direct func tests passing.

	--------------

	========================================================

	--------------

	Work out how to get ping tokens down to the client

	--------------

	Get the client pinging near relays w. ping tokens and getting responses.

	--------------

	Update the reference relay so it can handle the new SDK5 packet types.

	--------------

	Get an actual end-to-end network next route going with SDK5 client/server.

	--------------

	Get the rest of the func tests passing.

	--------------

	=================================================

	--------------

	Move server whois to the backend, it's unreliable when run on the SDK server
	and the iteration time for fixes (new SDK deploy) is just too long.

	--------------

	We need a server flush method to timeout all sessions and flush session updates until acked.

	--------------
