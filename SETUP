SETUP

	-----------

	Install the google cloud command line tool "gcloud".

	https://cloud.google.com/sdk/gcloud

	-----------

	Setup an OpenVPN node in linode. You'll need this to secure your admin account access.

	Take note of the VPN address here, eg. 45.79.157.168

	-----------

	Setup semaphore to build source code from github.

	http://semaphoreci.com -- create a startup plan.

	Create new project, point it at your github repo...

	Set it up to drive from .semaphore/semaphore.yml file and everything should work

	-----------

	Go to your semaphoreci account and select "Settings"

	Under "Settings" go to "Secrets"

	Create a new secret called "google-cloud-platform"

	Set it to an env var secret:

		"COMPANY_NAME" = "(lowercase company name)"

	eg. COMPANY_NAME=mycompany

	-----------

	Create a google cloud project called "Storage"

	Create a bucket in this project called "[companyname]_network_next_dev_artifacts"

	Accept all defaults for the bucket create.

	-----------

	Now we have to give semaphoreci permission to upload artifacts to the google cloud storage bucket.

	Create a service account.

	Go to "Create a service account" in the "Storage" google cloud project under "IAM / Service Accounts".

	Create a service account called "semaphore".

	Copy the name of the service account and write it down somewhere, eg. semaphore@storage-394918.iam.gserviceaccount.com

	Create a new key for this service account of type JSON.

	This file will download to a location on your computer as a .json file

	-----------

	Go to your semaphoreci account and select "Settings"

	Under "Settings" go to "Secrets"

	Create a new secret called "google-cloud-platform"

	Set the secret to type configuration file: "/home/semaphore/gcp-service-account.json"

	Upload the JSON key file downloaded from google cloud previously for the service account you just created.

	-----------

	Go to the cloud storage bucket in google cloud

	Set "New principals" to the name of your service account.

	Set permissions to "Storage Object Admin".

	-----------

	Go to semaphore and trigger a build in the "dev" branch. Create the "dev" branch if necessary.

	Once the build succeeds, it should automatically run "Upload Artifacts" from the build.

	Verify that the artifacts upload correctly, and you can now see them in the google cloud bucket.

	-----------

	Run the "Upload Database" job in semaphore 

	Verify that you now see a "database.bin" file in the artifacts bucket.

	-----------

	Create a cloud storage bucket called "[companyname]_network_next_sdk_config"

	Give the same permissions to the service account on this bucket, except uncheck "Enforce public access protection" on create.

	Then, modify this bucket so it has public read access.

		Grant to "allUsers" "Cloud Storage Viewer".

	Ignore the warnings, the files need to be publicly accessible.

	-----------

	Run the "Upload Config" job under the last successful semaphore run.

	Verify that it succeeds, and you can now see the config files in the bucket.

	Verify that you can download the config files via the public URL

	eg. open https://storage.googleapis.com/[companyname]_network_next_sdk_config/multiplay.txt in a browser and see that you can view the text file.

	-----------

	Create a cloud storage bucket called "[companyname]_network_next_relay_artifacts"

	Give the same permissions to the service account on this bucket, except uncheck "Enforce public access protection" on create.

	Then, modify this bucket so it has public read access.

		Grant to "allUsers" "Cloud Storage Viewer".

	Ignore the warnings, the files need to be publicly accessible.

	Run the "Upload Relay" job in semaphore and verify that it succeeds and relay binaries appears in this bucket.

	-----------

	Now switch to the "Development" project in google cloud.

	In this project, add a new service account called "terraform".

	Give this account simplified permissions "Editor".

	Save the full name of the service account somewhere, eg: terraform@development-394617.iam.gserviceaccount.com

	Create a JSON key for the service account and download it.

	-----------

	Create a new directory under your home directory: ~/secrets

	Move the downloaded JSON key to: ~/secrets/terraform-development.json

	-----------

	Edit the file: terraform/dev/backend/terraform.tfvars under the "next" repository.

	Change "service_account" to the name of the service account you just created under the "Development" google cloud project.

	Change "project" to the name of the google cloud project, eg. development-394617 (whatever it is called in your google cloud console)

	Change "artifacts_bucket" to the name of the artifacts bucket you created, eg: artifacts_bucket = "gs://[companyname]_network_next_dev_artifacts"

	Change "vpn_address" to your VPN IP address. Admin functionality will only be allowed from this IP address.

	-----------

	Change to the directory: terraform/dev/backend

	Run "terraform init".

	Run "terraform apply".

	Say "yes" to approve the terraform changes.

	*** Terraform will now provision your entire dev backend for you in google cloud. ***

	-----------
